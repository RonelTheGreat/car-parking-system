<% include ../partials/admin_top %>
    <div class="parent">

        <% include ../partials/admin_nav %>

        <div class="main bg-dark">
            <div class="modal-response modal-cont modal-cont-admin">
                <div class="prompt bg-dark">
                    <p class="response-modal-tag modal-tag"></p>
                    <button id="cancel" onclick="cancel()"><i class="far fa-times-circle"></i> close</button>
                </div>
            </div>


            <!-- MODAL FOR RESERVED OR OCCUPIED SLOT -->
            <div class="modal-cont modal-cont-admin" id="modal">
                <div class="prompt bg-dark">
                    <p class="modal-tag slot-tag"></p>
                    <p class="username-container"></p>
                    <p class="fullname-container"></p>
                    <p class="reservation-time-container"></p>
                    <p class="expiration-container"></p>
                    <p class="duration-container"></p>
                    <p class="remaining-time-container"></p>
                    <button id="cancel" onclick="cancel()"><i class="far fa-times-circle"></i> close</button>
                </div>
            </div>
            <!-- MODAL FOR RESERVATION -->


            <!-- MODAL FOR RESERVATION -->
            <div class="modal-cont modal-cont-admin modal-reservation">
                <div class="prompt bg-dark">
                    <p class="modal-tag"><i class="far fa-calendar-alt"></i> reserve slot for:</p>
                    <div class="select-container">
                    <select class="select" name="user" onchange=selectUser(event)>
                            <option value="">Select User</option>
                            <% users.forEach(user => { %>
                            <% if (!user.isAdmin) { %>
                            <option value="<%= user.username %>">
                                <%= user.username %>
                            </option>
                            <% } %>
                            <% }) %>
                        </select>
                    </div>

                    <button id="confirm" onclick="confirm();"><i class="far fa-check-circle"></i> confirm</button>
                    <button id="cancel" onclick="cancel()"><i class="far fa-times-circle"></i> cancel</button>
                </div>
            </div>
            <!-- MODAL FOR RESERVATION -->


            <div class="parking-slot" id="cont">
                <% slots.forEach(slot => { %>
                <div class="slot" id="slot">
                    <p class="letter" id='letter'>
                        <%= slot.slotLetter %>
                    </p>
                    <div class="indicator bg-<%= slot.indicator %>-alpha" id="indicator">

                        <!-- RESERVATION TAG -->
                        <% if (slot.state == 'vacant') { %>
                        <p class="tag"><i class="fas fa-exclamation-circle"></i> click slot to reserve</p>
                        <% } %> <!-- RESERVATION TAG -->

                        
                        <!-- EVERY SLOT's STATE -->
                        <p class="state">

                            <!-- VACANT STATE -->
                            <% if (slot.state == 'vacant'){ %>
                            <i class="far fa-check-circle"></i> vacant
                            <span id="slotLetter" hidden><%= slot.slotLetter %></span>
                            <form id="reserve-form" onsubmit="event.preventDefault()"></form>
                            <!-- VACANT STATE -->
            

                            <!-- RESERVED or OCCUPIED STATE -->
                            <% } else if (slot.state == 'reserved' || slot.state == 'occupied'){ %>
                                <% if (slot.state == 'reserved') { %>
                                    <i class="far fa-calendar-check"></i> reserved
                                <% } else { %>
                                    <i class="fas fa-car"></i> occupied
                                <% } %>
                            <span id="slotLetter" hidden><%= slot.slotLetter %></span>

                            <!-- hidden elements -->
                            <span class="parokyano" hidden><%= slot.parokya.username %></span>
                            <span class="fullname" hidden>
                                <%= `${slot.parokya.fname} ${slot.parokya.mi}. ${slot.parokya.lname}` %>
                            </span>
                            <span class="expiration" hidden><%= slot.parokya.reservation.expiration.str %></span>
                            <span class="reservation-time" hidden><%= slot.parokya.reservation.time %></span>
                            <span class="duration" hidden><%= slot.parokya.reservation.duration %></span>
                            <span id="time" hidden></span>
                            <span id="isExcess" hidden>false</span>
                            <!-- RESERVED STATE -->



                            <% } else { %> 
                            <i class="far fa-check-circle"></i> vacant
                            <% } %>

                            <span class="slotState" hidden><%= slot.state %></span>
                        </p><!-- EVERY SLOT's STATE -->
                    </div>
                    <p class="tagline-reserve"></p>
                </div>
                <% }) %>
            </div>

            <% include ../partials/free_space %>
        </div>

        <div class="side side-admin bg-dark">
            <div class="header">
                <h2 class="bg-blue"><i class="fas fa-users"></i> user accounts</h2>
            </div>

            <% include ../partials/user_accounts %>
        </div>

    <% include ../partials/footer %>
    </div>

    <script>

        var socket = io.connect('https://parkya.herokuapp.com/');

        // parent containers
        var modal = document.getElementById('modal');
        var cont = document.getElementById('cont');
        var modalReservation = document.querySelector('.modal-reservation');
        var modalResponse = document.querySelector('.modal-response');
        var reserveForm = document.getElementById('reserve-form');
        var responseModalTag = document.querySelector('.response-modal-tag');
        
        // target modal container elements
        var modalTag = document.querySelector('.modal-tag');
        var slotTag = document.querySelector('.slot-tag');
        var parokyanoContainer = document.querySelector('.parokyano');
        var usernameContainer = document.querySelector('.username-container');
        var fullnameContainer = document.querySelector('.fullname-container');
        var reservationTimeContainer = document.querySelector('.reservation-time-container');
        var durationContainer = document.querySelector('.duration-container');
        var remainingTimeContainer = document.querySelector('.remaining-time-container');
        var expirationContainer = document.querySelector('.expiration-container');
        var isExcessContainer = document.querySelector('#isExcess') !== null && document.querySelector('#isExcess');
        var selectedItem = document.querySelector('.select');

        var slotLetter = '';
        var username = '';

        var isExcess = isExcessContainer.textContent; 

        var selectedUser = [];

        function selectUser(event) {
            
            let username = event.target.value;

            if (selectedUser.length <= 0) {
                selectedUser.push(username);
            
            } else {    
                let user = selectedUser.filter(user => user === username)[0];
                
                if (user !== event.target.value && event.target.value !== '') {

                    socket.emit('activelyReserving', 
                        {
                            isReserving: false,
                            slot:slotLetter,
                            username: selectedUser[0]
                        }
                    
                        );

                    selectedUser[0] = username;
                }
            }

            socket.emit('activelyReserving',
                {
                    isReserving: true,
                    slot: slotLetter,
                    username: selectedUser[selectedUser.length - 1],
                }
            );
        }

        // listen for a signal from the server to refresh 
        socket.on('signalFromServer', (signal) => {
            if (signal.refresh) {
                $.ajax({
                    type: 'GET',
                    url: '/admin/home',
                    cache: false,
                    success: function (result) {
                        $('#cont').html($(result).find('#slot'));
                        isExcessContainer.textContent = 'false';
                    },
                });
            }
        })


        // remaining and excess time listener
        socket.on('updateTimeEvent', time => {

            let slots = document.querySelectorAll('.state');

            // loop through each slot
            slots.forEach(slot => {
                // grab username for a specific slot
                if (slot.children[2] !== undefined) {

                    let username = slot.children[2].innerText;

                    if (time.username === username) {

                        if (!time.isExcess) {
                            let { hour, min, sec } = time.remaining;
                            slot.children[7].textContent = `${hour} : ${min} : ${sec}`;
                        } else {
                            let { hour, min, sec } = time.excess;
                            slot.children[7].textContent = `${hour} : ${min} : ${sec}`;
                            isExcessContainer.textContent = 'true';
                        }
                    }
                }
            })
        })



            // listen if someone is actively making a reservation
        socket.on('activelyReserving', (data) => {
            // grab all slots
            let slots = document.querySelectorAll('.slot');

            // loop through each slot
            slots.forEach(slot => {
                // grab slot letter element
                const letter = slot.children[0].innerText;
                let tagLine = slot.lastElementChild;

                if (letter.toLowerCase() === data.slot) {

                    // if someone is actively reserving
                    // hide indicator so that it is not clickable
                    // flash a message that someone is reserving the slot
                    if (data.isReserving) {
                        slot.children[1].style.zIndex = '-1';
                        tagLine.innerHTML = 'reserving a user <i class="fas fa-car"></i>';
                        tagLine.style.textAlign = 'center';
                        tagLine.style.position = 'absolute';
                        tagLine.style.bottom = '-6%';


                        // if the user cancel reservation, return to original state
                    } else {
                        tagLine.style.color = '#141D26';
                        tagLine.textContent = '';
                        slot.children[1].style.zIndex = '';
                    }
                }

                tagLine.style.color = '#EFF2F7';
            })
        })



        // listen for click events on slots
        cont.addEventListener('click', function(event) {
            var slotStateEl = event.target.querySelector('.slotState');
            var slotLetterEl = event.target.querySelector("#slotLetter");

            if (slotStateEl != null && slotLetterEl != null) {
                var slotState = slotStateEl.textContent;
                slotLetter = slotLetterEl.textContent;

                if (slotState == 'vacant') {

                    modalReservation.style.display = 'block';
                    modalReservation.style.zIndex = '99999';
                }

                if (slotState == 'reserved' || slotState == 'occupied') {

                    // span hidden elements that holds the user's information
                    var parokyanoElement = event.target.querySelector('.parokyano');
                    var fullnameElement = event.target.querySelector('.fullname');
                    var reservationTimeEl = event.target.querySelector('.reservation-time');
                    var durationElement = event.target.querySelector('.duration');
                    var expirationEl = event.target.querySelector('.expiration');
                    var timeEl = event.target.querySelector('#time');
                    var excessTimeEl = event.target.querySelector('.excess-time');

                    // extracted information
                    var fullname = fullnameElement.textContent;
                    var reservationTime = reservationTimeEl.textContent;
                    var parokyanoUsername = parokyanoElement.innerText;
                    var duration = durationElement.textContent;
                    var time = timeEl.textContent;
                    // var remainingTime = remainingTimeEl.textContent;
                    var expirationTime = expirationEl.textContent;  

                    // data to put to modal
                    slotTag.innerHTML = `${(slotState === 'reserved') ? 
                    '<i class="far fa-calendar-check"></i> reserved slot' : 
                    '<i class="fas fa-car"></i> occupied slot'}`;

                    usernameContainer.innerHTML = `<span class="modal-lbl">
                                <i class="fas fa-user-tag"></i> username: 
                                </span>${parokyanoUsername}`;

                    fullnameContainer.innerHTML = `<span class="modal-lbl">
                                <i class="fas fa-user-tie"></i> fullname: 
                                </span>${fullname}`;

                    reservationTimeContainer.innerHTML = `<span class="modal-lbl">
                                    <i class="far fa-clock"></i> reservation time: 
                                    </span>${reservationTime}`;
                    
                    expirationContainer.innerHTML =`<span class="modal-lbl">
                                    <i class="far fa-clock"></i> expiration time: 
                                    </span>${expirationTime}`;

                    durationContainer.innerHTML = `<span class="modal-lbl">
                                <i class="far fa-hourglass"></i> duration:
                                </span>${duration} min.`;

                    remainingTimeContainer.innerHTML = `<span class="modal-lbl" 
                    style="color: ${isExcess === 'true' ? '#FF554E' : ''}">
                                <i class="fas fa-stopwatch"></i>${isExcess ==='true' ? 'excess time:' : 'remaining time:'}</span> ${time}`;
   
                    modal.style.display = 'block';
                    modal.style.zIndex = '99999';
                }

            }
        }, false);


        // confirm reserve on slot
        function confirm() {
            $.ajax({
                type: 'POST',
                data: {
                    username: selectedItem.value,
                    slotLetter: slotLetter,
                },
                url: '/reserve',
                dataType: 'json',
                cache: false,
                success: function (res) {
                    if (res.refresh) {
                        socket.emit('signalFromClient', {reservation: true, slot: slotLetter});
                    }
                    modalReservation.style.display = 'none';
                    modalResponse.style.display = 'block';
                    modalResponse.style.zIndex = '99999';
                    responseModalTag.innerHTML = `<i class="far fa-bell"></i> ${res.response}`;
                    responseModalTag.style.fontSize = '1.5em';
                    modalResponse.style.paddingTop = '8%';
                    document.querySelector('body').style.overflow = 'hidden';
                    document.getElementById('cancel').style.marginTop = '5%';
                }
            })
        }


        // cancel 
        function cancel() {
            modal.style.display = 'none';
            modalReservation.style.display = 'none';
            modalResponse.style.display = 'none';
            socket.emit('activelyReserving', 
                {
                    isReserving: false, 
                    slot: slotLetter, 
                    username: selectedUser,
                    isAdmin: true,
                });

            console.log(selectedUser)
            selectedUser = [];
        }

    </script>

<% include ../partials/bottom %>